import{r as t,h as e}from"./p-ee0b9025.js";import{S as s}from"./p-c74b54ba.js";import{p as i}from"./p-4ebd2c24.js";import{T as o}from"./p-37df3757.js";import{g as a}from"./p-11ad5c91.js";import"./p-a3b5bd35.js";import"./p-80de33dc.js";import"./p-83f217d4.js";import"./p-4d2049bc.js";import"./p-3c89b68a.js";import"./p-d8454b73.js";import"./p-93cac3a6.js";import"./p-ca993e0f.js";import"./p-949334ec.js";let p=class{constructor(e){t(this,e),this.selectList={items:[],isFlagsEnum:!1}}async componentWillLoad(){this.currentValue=this.propertyModel.expressions[s.Json]||"[]"}onValueChanged(t){const e=t.map((t=>"string"==typeof t?t:"number"==typeof t||"boolean"==typeof t?t.toString():t.value));this.currentValue=JSON.stringify(e),this.propertyModel.expressions[s.Json]=this.currentValue}onDefaultSyntaxValueChanged(t){this.currentValue=t.detail}createKeyValueOptions(t){return null===t?t:t.map((t=>"string"==typeof t?{text:t,value:t}:t))}async componentWillRender(){this.selectList=await a(this.serverUrl,this.propertyDescriptor)}render(){const t=this.propertyDescriptor,s=this.propertyModel,o=t.name,a=o,p=o,r=i(this.currentValue),n=!!t.options&&t.options.length>0,l=this.createKeyValueOptions(this.selectList.items),d=n?e("elsa-input-tags-dropdown",{dropdownValues:l,values:r,fieldId:a,fieldName:p,onValueChanged:t=>this.onValueChanged(t.detail)}):e("elsa-input-tags",{values:r,fieldId:a,fieldName:p,onValueChanged:t=>this.onValueChanged(t.detail)});return e("elsa-property-editor",{activityModel:this.activityModel,propertyDescriptor:t,propertyModel:s,onDefaultSyntaxValueChanged:t=>this.onDefaultSyntaxValueChanged(t),"single-line":!0},d)}};o.injectProps(p,["serverUrl"]);export{p as elsa_multi_text_property}